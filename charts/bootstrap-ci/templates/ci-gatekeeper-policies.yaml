apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: cirules
spec:
  crd:
    spec:
      names:
        kind: ciRules
        listKind: ciRulesList
        plural: ciRules
        singular: ciRules
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package ciRules

        violation[{"msg": msg}] {
          input.review.object.kind == "Namespace"
          s := split(input.review.userInfo.username, ":")
          saName := s[3]
          startswith(saName, "ci-")
          saName != input.review.object.metadata.name
          msg := sprintf("The CI service account \"%v\" is only allowed to create a namespace named \"%v\"", [saName, saName])
        }

        violation[{"msg": msg}] {
          s := split(input.review.userInfo.username, ":")
          saName := s[3]
          startswith(saName, "ci-")
          kind := input.review.object.kind
          kind != "Namespace"
          saName != input.review.object.metadata.namespace
          msg := sprintf("The CI service account \"%v\" is only allowed to create \"%v\" in the namespace \"%v\"", [saName, kind, saName])
        }
---
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: ciRules
metadata:
  name: cirules
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Namespace", "Role"]
      - apiGroups: ["rbac.authorization.k8s.io"]
        kinds: ["RoleBinding"]
